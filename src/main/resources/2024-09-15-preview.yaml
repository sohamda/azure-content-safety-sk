openapi: 3.0.1
info:
  title: ContentSafety Service
  description: Analyze harmful content
  version: 2024-09-15-preview
servers:
  - url: https://azure-ai-content-safety-api-docs.azure-api.net/contentsafety
paths:
  '/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems':
    post:
      summary: Add or update BlocklistItems To Text Blocklist
      description: Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request.
      operationId: TextBlocklists_AddOrUpdateBlocklistItems
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
      requestBody:
        description: Options for adding or updating blocklist items.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateTextBlocklistItemsOptions'
            example:
              blocklistItems:
                - blocklistItemId: string
                  description: string
                  text: string
                  isRegex: true
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrUpdateTextBlocklistItemsResult'
              example:
                blocklistItems:
                  - blocklistItemId: string
                    description: string
                    text: string
                    isRegex: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:detectProtectedMaterial:
    post:
      summary: Detect Protected Material for Text
      description: A synchronous API for detecting protected material in the given text.
      operationId: TextOperations_DetectTextProtectedMaterial
      requestBody:
        description: 'The request body to be detected, which may contain protected material.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectTextProtectedMaterialOptions'
            example:
              text: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectTextProtectedMaterialResult'
              example:
                protectedMaterialAnalysis:
                  detected: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}:removeBlocklistItems':
    post:
      summary: Remove BlocklistItems From Text Blocklist
      description: Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request.
      operationId: TextBlocklists_RemoveBlocklistItems
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
      requestBody:
        description: Options for removing blocklist items.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTextBlocklistItemsOptions'
            example:
              blocklistItemIds:
                - string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:shieldPrompt:
    post:
      summary: Shield Prompt
      description: A synchronous API for shielding prompt from direct and indirect injection attacks.
      operationId: TextOperations_ShieldPrompt
      requestBody:
        description: 'The request body to be detected, which may contain direct or indirect injection attacks.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShieldPromptOptions'
            example:
              userPrompt: string
              documents:
                - string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShieldPromptResult'
              example:
                userPromptAnalysis:
                  attackDetected: true
                documentsAnalysis:
                  - attackDetected: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}':
    patch:
      summary: Create Or Update Text Blocklist
      description: 'Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created.'
      operationId: TextBlocklists_CreateOrUpdateTextBlocklist
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
      requestBody:
        description: The resource instance.
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/TextBlocklistCreateOrUpdate'
            example:
              blocklistName: string
              description: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklist'
              example:
                blocklistName: string
                description: string
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklist'
              example:
                blocklistName: string
                description: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    delete:
      summary: Delete Text Blocklist By blocklistName
      description: Deletes a text blocklist.
      operationId: TextBlocklists_DeleteTextBlocklist
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    get:
      summary: Get Text Blocklist By blocklistName
      description: Returns text blocklist details.
      operationId: TextBlocklists_GetTextBlocklist
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklist'
              example:
                blocklistName: string
                description: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}/blocklistItems':
    get:
      summary: Get All BlocklistItems By blocklistName
      description: Get all blocklistItems in a text blocklist.
      operationId: TextBlocklists_ListTextBlocklistItems
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextBlocklistItem'
              example:
                value:
                  - blocklistItemId: string
                    description: string
                    text: string
                    isRegex: true
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text/blocklists:
    get:
      summary: Get All Text Blocklists
      description: Get all text blocklists details.
      operationId: TextBlocklists_ListTextBlocklists
      parameters:
        - name: api-version
          in: query
          description: The API version to use for this operation.
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextBlocklist'
              example:
                value:
                  - blocklistName: string
                    description: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}':
    get:
      summary: Get BlocklistItem By blocklistName And blocklistItemId
      description: Get blocklistItem by blocklistName and blocklistItemId from a text blocklist.
      operationId: TextBlocklists_GetTextBlocklistItem
      parameters:
        - name: blocklistName
          in: path
          description: Text blocklist name.
          required: true
          schema:
            maxLength: 64
            pattern: '^[0-9A-Za-z._~-]+$'
            type: string
        - name: blocklistItemId
          in: path
          description: 'The service will generate a BlocklistItemId, which will be a UUID.'
          required: true
          schema:
            maxLength: 64
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBlocklistItem'
              example:
                blocklistItemId: string
                description: string
                text: string
                isRegex: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /image:analyze:
    post:
      summary: Analyze Image
      description: 'A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.'
      operationId: ImageOperations_AnalyzeImage
      requestBody:
        description: The image analysis request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeImageOptions'
            example:
              image:
                content: string
                blobUrl: string
              categories:
                - Hate
              outputType: FourSeverityLevels
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeImageResult'
              example:
                categoriesAnalysis:
                  - category: Hate
                    severity: 0
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:analyze:
    post:
      summary: Analyze Text
      description: 'A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence.'
      operationId: TextOperations_AnalyzeText
      requestBody:
        description: The text analysis request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeTextOptions'
            example:
              text: string
              categories:
                - Hate
              blocklistNames:
                - string
              haltOnBlocklistHit: true
              outputType: FourSeverityLevels
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeTextResult'
              example:
                blocklistsMatch:
                  - blocklistName: string
                    blocklistItemId: string
                    blocklistItemText: string
                categoriesAnalysis:
                  - category: Hate
                    severity: 0
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /image/incidents:
    get:
      summary: Image Incident - List
      description: List all image safety incidents and their details.
      operationId: ImageIncidentOperations_ListIncidents
      parameters:
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedImageIncident'
              example:
                value:
                  - incidentName: string
                    created: string
                    lastUpdated: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/{incidentName}:deploy':
    post:
      summary: Image Incident - Deploy
      description: 'Deploy the given image safety incident. After the deployment completed, the incident can be used to detect content. This will submit a long running operation.'
      operationId: ImageIncidentOperations_Deploy
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: Operation-Id
          in: header
          description: 'The operation id passed by the user, if not provided, will be automatically generated as a UUID.'
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '202':
          description: 'The request has been accepted for processing, but processing has not yet completed.'
          headers:
            Operation-Id:
              description: The operation id passed by the user in the request or a random UUID generated by server side.
              schema:
                maxLength: 64
                pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
                type: string
            Operation-Location:
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIncidentsIncidentName-deployPost202ApplicationJsonResponse'
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/{incidentName}':
    get:
      summary: Image Incident - Get
      description: Return details of the given image safety incident.
      operationId: ImageIncidentOperations_GetIncidents
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIncident'
              example:
                incidentName: string
                created: string
                lastUpdated: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      summary: Image Incident - Upsert
      description: 'Update the given image safety incident. If the incident does not exist, a new one will be created.'
      operationId: ImageIncidentOperations_CreateOrUpdateIncident
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        description: The resource instance.
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ImageIncidentCreateOrUpdate'
            example:
              incidentName: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIncident'
              example:
                incidentName: string
                created: string
                lastUpdated: string
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIncident'
              example:
                incidentName: string
                created: string
                lastUpdated: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    delete:
      summary: Image Incident - Delete
      description: Deletes the given image safety incident.
      operationId: ImageIncidentOperations_DeleteIncident
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/{incidentName}:addIncidentSamples':
    post:
      summary: Image Incident - Add Samples
      description: Add samples to the given image safety incident.
      operationId: ImageIncidentOperations_AddIncidentSamples
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddImageIncidentSamplesOptions'
            example:
              incidentSamples:
                - incidentSampleId: string
                  image:
                    content: string
                    blobUrl: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddImageIncidentSamplesResult'
              example:
                incidentSamples:
                  - incidentSampleId: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/{incidentName}:removeIncidentSamples':
    post:
      summary: Image Incident - Remove Samples
      description: Remove samples from the given image safety incident.
      operationId: ImageIncidentOperations_RemoveIncidentSamples
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveImageIncidentSamplesOptions'
            example:
              incidentSampleIds:
                - string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/{incidentName}/incidentSamples':
    get:
      summary: Image Incident - List Samples
      description: List all samples added into the given image safety incident.
      operationId: ImageIncidentOperations_ListIncidentSamples
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListImageIncidentSampleResult'
              example:
                value:
                  - incidentSampleId: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/{incidentName}/incidentSamples/{incidentSampleId}':
    get:
      summary: Image Incident - Get Sample
      description: Get details of a sample with the sample id from the given image safety incident.
      operationId: ImageIncidentOperations_GetIncidentSample
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: incidentSampleId
          in: path
          description: The name of this incident sample.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIncidentSampleResult'
              example:
                incidentSampleId: string
                image:
                  content: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/image/incidents/operations/{operationId}':
    get:
      summary: Image Incident - Get Long Running Operation
      description: Get details of an image safety incident operation.
      operationId: ImageIncidentOperations_GetLongRunningOperation
      parameters:
        - name: operationId
          in: path
          description: The id of this operation.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIncidentOperationResult'
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /image:detectIncidents:
    post:
      summary: Analyze Image with Image Incidents
      description: A synchronous API to analyze image content with the custom content safety Image Incidents defined.
      operationId: ImageOperations_DetectImageIncidents
      requestBody:
        description: The request body to be detected.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeImageDetectIncidentsOptions'
            example:
              image:
                content: string
                blobUrl: string
              incidentNames:
                - string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectIncidentsResult'
              example:
                incidentMatches:
                  - incidentName: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /imageWithText:analyze:
    post:
      summary: Analyze Image with Text
      description: A synchronous API to analyze image content with embedded or custom text content.
      operationId: ImageWithTextOperations_AnalyzeImageWithText
      requestBody:
        description: The request body of image-with-text analysis.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeImageWithTextOptions'
            example:
              image:
                content: string
                blobUrl: string
              text: string
              categories:
                - Hate
              enableOcr: true
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeImageWithTextResult'
              example:
                categoriesAnalysis:
                  - category: Hate
                    severity: 0
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text/categories:
    get:
      summary: Custom Category - List
      description: List Custom Categories with their latest versions.
      operationId: TextCustomizedCategoryOperations_ListCustomizedCategory
      parameters:
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextCustomCategoryVersion'
              example:
                value:
                  - categoryName: string
                    definition: string
                    sampleBlobUrl: string
                    sampleBlobSnapshotUrl: string
                    version: 0
                    createdTime: string
                    status: NotStarted
                    errorMessage: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/categories/{categoryName}:build':
    post:
      summary: Custom Category - Build
      description: 'Trigger the build process for the given Custom Category. After the build completed, the category can be used to analyze content. This will submit a long running operation.'
      operationId: TextCustomizedCategoryOperations_Build
      parameters:
        - name: categoryName
          in: path
          description: The name of this Custom Category
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: version
          in: query
          description: Format - int32. The build will target on the given version.
          required: true
          schema:
            type: integer
            format: int32
        - name: Operation-Id
          in: header
          description: 'The operation id passed by the user, if not provided, will be automatically generated as a UUID.'
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '202':
          description: 'The request has been accepted for processing, but processing has not yet completed.'
          headers:
            Operation-Id:
              description: The operation id passed by the user in the request or a random UUID generated by server side.
              schema:
                maxLength: 64
                pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
                type: string
            Operation-Location:
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextCategoriesCategoryName-buildPost202ApplicationJsonResponse'
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/categories/{categoryName}':
    get:
      summary: Custom Category - Get
      description: Get the specified or latest version of the given Custom Category.
      operationId: TextCustomizedCategoryOperations_GetCustomizedCategory
      parameters:
        - name: categoryName
          in: path
          description: Name of the Custom Category.
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: 'Format - int32. If not provided, it will return the latest version.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextCustomCategoryVersionList'
              example:
                value:
                  - categoryName: string
                    definition: string
                    sampleBlobUrl: string
                    sampleBlobSnapshotUrl: string
                    version: 0
                    createdTime: string
                    status: NotStarted
                    errorMessage: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    put:
      summary: Custom Category - Create
      description: Create a new Custom Category or a new version of an existing Custom Category. This will submit a long running operation.
      operationId: TextCustomizedCategoryOperations_CreateTextCustomCategoryVersion
      parameters:
        - name: categoryName
          in: path
          description: The name of this Custom Category
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        description: The resource instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextCustomCategoryVersion'
            example:
              categoryName: string
              definition: string
              sampleBlobUrl: string
              sampleBlobSnapshotUrl: string
              version: 0
              createdTime: string
              status: NotStarted
              errorMessage: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextCustomCategoryVersion'
              example:
                categoryName: string
                definition: string
                sampleBlobUrl: string
                sampleBlobSnapshotUrl: string
                version: 0
                createdTime: string
                status: NotStarted
                errorMessage: string
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextCustomCategoryVersion'
              example:
                categoryName: string
                definition: string
                sampleBlobUrl: string
                sampleBlobSnapshotUrl: string
                version: 0
                createdTime: string
                status: NotStarted
                errorMessage: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    delete:
      summary: Custom Category - Delete
      description: Delete the specified or ALL versions of the given Custom Category.
      operationId: TextCustomizedCategoryOperations_DeleteCustomizedCategory
      parameters:
        - name: categoryName
          in: path
          description: The name of this Custom Category
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: version
          in: query
          description: 'Format - int32. If not provided, it will delete ALL versions.'
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/categories/operations/{operationId}':
    get:
      summary: Custom Category - Get Long Running Operation
      description: Get details of the given Custom Category operation.
      operationId: TextCustomizedCategoryOperations_GetLongRunningOperation
      parameters:
        - name: operationId
          in: path
          description: The id of this operation.
          required: true
          schema:
            maxLength: 64
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomCategoryOperationDetail'
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text/incidents:
    get:
      summary: Text Incident - List
      description: List all text safety incidents and their details.
      operationId: TextIncidentOperations_ListIncidents
      parameters:
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextIncident'
              example:
                value:
                  - incidentName: string
                    incidentDefinition: string
                    created: string
                    lastUpdated: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/{incidentName}:deploy':
    post:
      summary: Text Incident - Deploy
      description: 'Deploy the given text safety incident. After the deployment completed, the incident can be used to detect content. This will submit a long running operation.'
      operationId: TextIncidentOperations_Deploy
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: Operation-Id
          in: header
          description: 'The operation id passed by the user, if not provided, will be automatically generated as a UUID.'
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '202':
          description: 'The request has been accepted for processing, but processing has not yet completed.'
          headers:
            Operation-Id:
              description: The operation id passed by the user in the request or a random UUID generated by server side.
              schema:
                maxLength: 64
                pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
                type: string
            Operation-Location:
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextIncidentsIncidentName-deployPost202ApplicationJsonResponse'
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/{incidentName}':
    get:
      summary: Text Incident - Get
      description: Return details of the given text safety incident.
      operationId: TextIncidentOperations_GetIncidents
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextIncident'
              example:
                incidentName: string
                incidentDefinition: string
                created: string
                lastUpdated: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      summary: Text Incident - Upsert
      description: 'Update the given text safety incident. If the incident does not exist, a new one will be created.'
      operationId: TextIncidentOperations_CreateOrUpdateIncident
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        description: The resource instance.
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/TextIncidentCreateOrUpdate'
            example:
              incidentName: string
              incidentDefinition: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextIncident'
              example:
                incidentName: string
                incidentDefinition: string
                created: string
                lastUpdated: string
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextIncident'
              example:
                incidentName: string
                incidentDefinition: string
                created: string
                lastUpdated: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    delete:
      summary: Text Incident - Delete
      description: Deletes the given text safety incident.
      operationId: TextIncidentOperations_DeleteIncident
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/{incidentName}:addIncidentSamples':
    post:
      summary: Text Incident - Add Samples
      description: Add samples to the given text safety incident.
      operationId: TextIncidentOperations_AddIncidentSamples
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTextIncidentSamplesOptions'
            example:
              incidentSamples:
                - incidentSampleId: string
                  text: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTextIncidentSamplesResult'
              example:
                incidentSamples:
                  - incidentSampleId: string
                    text: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/{incidentName}:removeIncidentSamples':
    post:
      summary: Text Incident - Remove Samples
      description: Remove samples from the given text safety incident.
      operationId: TextIncidentOperations_RemoveIncidentSamples
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTextIncidentSamplesOptions'
            example:
              incidentSampleIds:
                - string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          content:
            application/json: { }
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/{incidentName}/incidentSamples':
    get:
      summary: Text Incident - List Samples
      description: List all samples added into the given text safety incident.
      operationId: TextIncidentOperations_ListIncidentSamples
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: top
          in: query
          description: Format - int32. The number of result items to return.
          schema:
            type: integer
            format: int32
        - name: skip
          in: query
          description: Format - int32. The number of result items to skip.
          schema:
            type: integer
            format: int32
            default: 0
        - name: maxpagesize
          in: query
          description: Format - int32. The maximum number of result items per page.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTextIncidentSample'
              example:
                value:
                  - incidentSampleId: string
                    text: string
                nextLink: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/{incidentName}/incidentSamples/{incidentSampleId}':
    get:
      summary: Text Incident - Get Sample
      description: Get details of a sample with the sample id from the given text safety incident.
      operationId: TextIncidentOperations_GetIncidentSample
      parameters:
        - name: incidentName
          in: path
          description: The name of the incident.
          required: true
          schema:
            maxLength: 64
            pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
            type: string
        - name: incidentSampleId
          in: path
          description: The name of this incident sample.
          required: true
          schema:
            maxLength: 64
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextIncidentSample'
              example:
                incidentSampleId: string
                text: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  '/text/incidents/operations/{operationId}':
    get:
      summary: Text Incident - Get Long Running Operation
      description: Get details of the given text safety incident operation.
      operationId: TextIncidentOperations_GetLongRunningOperation
      parameters:
        - name: operationId
          in: path
          description: The id of this operation.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextIncidentOperationResult'
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:analyzeCustomCategory:
    post:
      summary: Analyze Text with Custom Category
      description: A synchronous API to analyze content with Custom Category defined.
      operationId: TextOperations_AnalyzeTextCustomCategory
      requestBody:
        description: The request body to be analyzed.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeTextCustomCategoryOption'
            example:
              text: string
              categoryName: string
              version: 0
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeTextCustomCategoryResult'
              example:
                customCategoryAnalysis:
                  detected: true
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:detectGroundedness:
    post:
      summary: Analyze Text Groundedness
      description: A synchronous API to analyze the language model outputs to evaluate alignment with user-provided information or to identify fictional content.
      operationId: TextOperations_DetectGroundednessOptions
      requestBody:
        description: The request body to be detected.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeTextGroundednessOptions'
            example:
              domain: Generic
              task: Summarization
              qna:
                query: string
              text: string
              groundingSources:
                - string
              correction: true
              reasoning: true
              llmResource:
                resourceType: AzureOpenAI
                azureOpenAIEndpoint: string
                azureOpenAIDeploymentName: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeTextGroundednessResult'
              example:
                ungroundedDetected: true
                ungroundedPercentage: 0
                ungroundedDetails:
                  - text: string
                    offset:
                      utf8: 0
                      utf16: 0
                      codePoint: 0
                    length:
                      utf8: 0
                      utf16: 0
                      codePoint: 0
                    reason: string
                correctedText: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:detectIncidents:
    post:
      summary: Analyze Text with Text Incidents
      description: A synchronous API to analyze text content with the custom content safety Text Incidents defined.
      operationId: TextOperations_DetectTextIncidents
      requestBody:
        description: The request body to be detected.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeTextDetectIncidentsOptions'
            example:
              text: string
              incidentNames:
                - string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectIncidentsResult'
              example:
                incidentMatches:
                  - incidentName: string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /text:detectProtectedMaterialForCode:
    post:
      summary: Detect Protected Material for Code
      description: A synchronous API for detecting protected material in the given code.
      operationId: TextOperations_DetectCodeProtectedMaterial
      requestBody:
        description: 'The request body to be detected, which may contain protected material.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectCodeProtectedMaterialOptions'
            example:
              code: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectCodeProtectedMaterialResult'
              example:
                protectedMaterialAnalysis:
                  detected: true
                  codeCitations:
                    - license: string
                      sourceUrls:
                        - string
        '500':
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
components:
  schemas:
    AddImageIncidentSamplesOptions:
      required:
        - incidentSamples
      type: object
      properties:
        incidentSamples:
          type: array
          items:
            $ref: '#/components/schemas/ImageIncidentSample'
          description: Incident samples to be added.
          x-ms-identifiers: [ ]
      description: The request to add incident samples to an Image Incident.
    AddImageIncidentSamplesResult:
      required:
        - incidentSamples
      type: object
      properties:
        incidentSamples:
          type: array
          items:
            $ref: '#/components/schemas/ListImageIncidentSampleResult'
          description: Array of incidentSamples have been added.
          x-ms-identifiers: [ ]
      description: The response of adding incident samples to an Image Incident.
    AddOrUpdateTextBlocklistItemsOptions:
      required:
        - blocklistItems
      type: object
      properties:
        blocklistItems:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistItem'
          description: Array of blocklistItems to add.
          x-ms-identifiers: [ ]
      description: The request to add blocklistItems to a text blocklist.
    AddOrUpdateTextBlocklistItemsResult:
      required:
        - blocklistItems
      type: object
      properties:
        blocklistItems:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistItem'
          description: Array of blocklistItems have been added.
          x-ms-identifiers: [ ]
      description: The response of adding blocklistItems to the text blocklist.
    AddTextIncidentSamplesOptions:
      required:
        - incidentSamples
      type: object
      properties:
        incidentSamples:
          type: array
          items:
            $ref: '#/components/schemas/TextIncidentSample'
          description: Incident samples to be added.
          x-ms-identifiers: [ ]
      description: The request to add incident samples to a Text Incident.
    AddTextIncidentSamplesResult:
      required:
        - incidentSamples
      type: object
      properties:
        incidentSamples:
          type: array
          items:
            $ref: '#/components/schemas/TextIncidentSample'
          description: Incident samples have been added.
          x-ms-identifiers: [ ]
      description: The response of adding incident samples to a Text Incident.
    AnalyzeImageDetectIncidentsOptions:
      required:
        - image
        - incidentNames
      type: object
      properties:
        image:
          $ref: '#/components/schemas/ImageData'
        incidentNames:
          type: array
          items:
            type: string
          description: The incidents defined.
      description: The request to analyze given image with content safety Image Incidents defined.
    AnalyzeImageOptions:
      required:
        - image
      type: object
      properties:
        image:
          $ref: '#/components/schemas/ImageData'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ImageCategory'
          description: 'The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned.'
        outputType:
          enum:
            - FourSeverityLevels
          type: string
          description: 'This refers to the type of image analysis output. If no value is assigned, the default value will be "FourSeverityLevels".'
          default: FourSeverityLevels
          x-ms-enum:
            name: AnalyzeImageOutputType
            modelAsString: true
            values:
              - name: FourSeverityLevels
                value: FourSeverityLevels
                description: 'Output severities in four levels, the value could be 0,2,4,6.'
      description: The image analysis request.
    AnalyzeImageResult:
      required:
        - categoriesAnalysis
      type: object
      properties:
        categoriesAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/ImageCategoriesAnalysis'
          description: Analysis result for categories.
          x-ms-identifiers: [ ]
      description: The image analysis response.
    AnalyzeImageWithTextOptions:
      required:
        - image
        - enableOcr
      type: object
      properties:
        image:
          $ref: '#/components/schemas/ImageData'
        text:
          type: string
          description: The text related to the given image.
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ImageWithTextCategory'
          description: The harm categories to be detected. A default set of harm categories will be applied if omitted.
        enableOcr:
          type: boolean
          description: 'When set to true, the embedded text in given image will be recognized and concatenated with the given text for analysis.'
      description: The request to analyze an image with embedded or custom text.
    AnalyzeImageWithTextResult:
      required:
        - categoriesAnalysis
      type: object
      properties:
        categoriesAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/ImageWithTextCategoriesAnalysis'
          description: The individual analysis result for each harm category.
          x-ms-identifiers: [ ]
      description: The response of analyzing an image with embedded or custom text.
    AnalyzeTextCustomCategoryOption:
      required:
        - text
        - categoryName
      type: object
      properties:
        text:
          type: string
          description: The text needs to be analyzed.
        categoryName:
          type: string
          description: Custom category name.
        version:
          type: integer
          description: 'Custom category version, if not assigned use the latest version.'
          format: int32
      description: The request to analyze given text content with the Custom Category version defined.
    AnalyzeTextCustomCategoryResult:
      required:
        - customCategoryAnalysis
      type: object
      properties:
        customCategoryAnalysis:
          $ref: '#/components/schemas/TextCustomCategoryAnalysis'
      description: The response of analyzing text with Custom Category.
    AnalyzeTextDetectIncidentsOptions:
      required:
        - text
        - incidentNames
      type: object
      properties:
        text:
          type: string
          description: The text to be analyzed.
        incidentNames:
          type: array
          items:
            type: string
          description: The incidents defined.
      description: The request to analyze given text content with content safety Text Incidents defined.
    AnalyzeTextGroundednessOptions:
      required:
        - text
        - groundingSources
      type: object
      properties:
        domain:
          enum:
            - Generic
            - Medical
          type: string
          description: "The domain of the text for analysis. Allowed values: Medical, Generic.\nThis field is optional, with a default value of Generic."
          default: Generic
          x-ms-enum:
            name: GroundednessDomain
            modelAsString: true
            values:
              - name: Generic
                value: Generic
                description: The domain for Groundedness analysis - Generic.
              - name: Medical
                value: Medical
                description: The domain for Groundedness analysis - Medical.
        task:
          enum:
            - Summarization
            - QnA
          type: string
          description: "The task type for the text analysis. Type of task: QnA, Summarization.\nThis field is optional, with a default value of Summarization."
          default: Summarization
          x-ms-enum:
            name: GroundednessTask
            modelAsString: true
            values:
              - name: Summarization
                value: Summarization
                description: The task type for Groundedness analysis - Summarization.
              - name: QnA
                value: QnA
                description: The task type for Groundedness analysis - QnA.
        qna:
          $ref: '#/components/schemas/QnAOptions'
        text:
          type: string
          description: 'The text to be analyzed. Usually, it''s the LLM output and may contain ungrounded content.'
        groundingSources:
          type: array
          items:
            type: string
          description: "The grounding sources to be used for validating the groundedness.\nLimit: Restrictions on the total amount of grounding sources that can be analyzed in a single request are 55K characters (in Unicode code point)."
        correction:
          type: boolean
          description: "A value indicating if to generate mitigated content for the ungrounded content and included in the response.\nThis field is optional, with a default value of false."
        reasoning:
          type: boolean
          description: "A value indicating if to generate an explanation for the groundedness analysis result and included in the response.\nThis field is optional, with a default value of false."
        llmResource:
          $ref: '#/components/schemas/LLMResource'
      description: The request of text groundedness analysis.
    AnalyzeTextGroundednessResult:
      required:
        - ungroundedDetected
        - ungroundedPercentage
        - ungroundedDetails
      type: object
      properties:
        ungroundedDetected:
          type: boolean
          description: Indicates whether ungrounded content is detected.
        ungroundedPercentage:
          type: number
          description: "Specifies the proportion of the text identified as ungrounded, \nexpressed as a decimal between 0 and 1,\nwhere 0 indicates no ungrounded content and 1 indicates the entire given text is considered ungrounded."
          format: float
        ungroundedDetails:
          type: array
          items:
            $ref: '#/components/schemas/UngroundednessDetails'
          description: Provides insights into ungrounded content with specific examples and percentages.
          x-ms-identifiers: [ ]
        correctedText:
          type: string
          description: "The correction for detected ungroundedness.\nIt's available only when the 'correction' field in the input is set to true."
      description: The response of text groundedness analysis.
    AnalyzeTextOptions:
      required:
        - text
      type: object
      properties:
        text:
          maxLength: 10000
          type: string
          description: The text to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request.
        categories:
          type: array
          items:
            $ref: '#/components/schemas/TextCategory'
          description: 'The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned.'
        blocklistNames:
          type: array
          items:
            type: string
          description: The names of blocklists.
        haltOnBlocklistHit:
          type: boolean
          description: 'When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit.'
        outputType:
          enum:
            - FourSeverityLevels
            - EightSeverityLevels
          type: string
          description: 'This refers to the type of text analysis output. If no value is assigned, the default value will be "FourSeverityLevels".'
          default: FourSeverityLevels
          x-ms-enum:
            name: AnalyzeTextOutputType
            modelAsString: true
            values:
              - name: FourSeverityLevels
                value: FourSeverityLevels
                description: 'Output severities in four levels, the value could be 0,2,4,6.'
              - name: EightSeverityLevels
                value: EightSeverityLevels
                description: 'Output severities in eight levels, the value could be 0,1,2,3,4,5,6,7.'
      description: The text analysis request.
    AnalyzeTextResult:
      required:
        - categoriesAnalysis
      type: object
      properties:
        blocklistsMatch:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistMatch'
          description: The blocklist match details.
          x-ms-identifiers: [ ]
        categoriesAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/TextCategoriesAnalysis'
          description: Analysis result for categories.
          x-ms-identifiers: [ ]
      description: The text analysis response.
    Azure.Core.Foundations.Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: An array of details about specific errors that led to this reported error.
          x-ms-identifiers: [ ]
        innererror:
          $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
      description: The error object.
    Azure.Core.Foundations.ErrorResponse:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
      description: A response containing error details.
    Azure.Core.Foundations.InnerError:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        innererror:
          $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
      description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
    Azure.Core.Foundations.OperationState:
      enum:
        - NotStarted
        - Running
        - Succeeded
        - Failed
        - Canceled
      type: string
      description: Enum describing allowed operation states.
      x-ms-enum:
        name: OperationState
        modelAsString: true
        values:
          - name: NotStarted
            value: NotStarted
            description: The operation has not started.
          - name: Running
            value: Running
            description: The operation is in progress.
          - name: Succeeded
            value: Succeeded
            description: The operation has completed successfully.
          - name: Failed
            value: Failed
            description: The operation has failed.
          - name: Canceled
            value: Canceled
            description: The operation has been canceled by the user.
    CodeCitation:
      required:
        - license
        - sourceUrls
      type: object
      properties:
        license:
          type: string
          description: The license type fetched from source repository.
        sourceUrls:
          type: array
          items:
            type: string
          description: The repository URLs of the source code detected.
      description: The code citation of potential protected material for code.
    CodeProtectedMaterialAnalysisResult:
      required:
        - detected
        - codeCitations
      type: object
      properties:
        detected:
          type: boolean
          description: Whether potential protected material is detected or not.
        codeCitations:
          type: array
          items:
            $ref: '#/components/schemas/CodeCitation'
          description: The code citation of potential protected material for code.
          x-ms-identifiers: [ ]
      description: The individual detection result of potential protected material for code.
    CustomCategoryLongRunningOperationStatusResult:
      type: object
      description: Custom Category long running operation status result.
    CustomCategoryOperationDetail:
      required:
        - id
        - status
      type: object
      properties:
        id:
          maxLength: 64
          type: string
          description: The id of this operation.
          x-ms-mutability:
            - read
            - create
        status:
          $ref: '#/components/schemas/CustomCategoryOperationStatus'
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
      description: The details of a long running operation of Custom Category.
    CustomCategoryOperationStatus:
      enum:
        - NotStarted
        - Running
        - Succeeded
        - Failed
      type: string
      description: The possible status of a Custom Category operation.
      x-ms-enum:
        name: CustomCategoryOperationStatus
        modelAsString: true
        values:
          - name: NotStarted
            value: NotStarted
            description: Custom Category operation status - NotStarted
          - name: Running
            value: Running
            description: Custom Category operation status - Running
          - name: Succeeded
            value: Succeeded
            description: Custom Category operation status - Succeeded
          - name: Failed
            value: Failed
            description: Custom Category operation status - Failed
    CustomCategoryStatus:
      enum:
        - NotStarted
        - Running
        - Succeeded
        - Failed
      type: string
      description: The possible status of building a Custom Category.
      x-ms-enum:
        name: CustomCategoryStatus
        modelAsString: true
        values:
          - name: NotStarted
            value: NotStarted
            description: Custom Category building status - NotStarted
          - name: Running
            value: Running
            description: Custom Category building status - Running
          - name: Succeeded
            value: Succeeded
            description: Custom Category building status - Succeeded
          - name: Failed
            value: Failed
            description: Custom Category building status - Failed
    DetectCodeProtectedMaterialOptions:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: 'The code to be analyzed, which may contain protected material. The characters will be counted in Unicode code points.'
      description: The request of detecting potential protected material present in the given code.
    DetectCodeProtectedMaterialResult:
      required:
        - protectedMaterialAnalysis
      type: object
      properties:
        protectedMaterialAnalysis:
          $ref: '#/components/schemas/CodeProtectedMaterialAnalysisResult'
      description: The combined detection results of potential protected material for code.
    DetectIncidentsResult:
      required:
        - incidentMatches
      type: object
      properties:
        incidentMatches:
          type: array
          items:
            $ref: '#/components/schemas/IncidentMatch'
          description: The details of matched incidents.
          x-ms-identifiers: [ ]
      description: The response of analyzing given content with content safety incidents defined.
    DetectTextProtectedMaterialOptions:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: 'The text to be analyzed, which may contain protected material. The characters will be counted in Unicode code points.'
      description: The request of detecting potential protected material present in the given text.
    DetectTextProtectedMaterialResult:
      required:
        - protectedMaterialAnalysis
      type: object
      properties:
        protectedMaterialAnalysis:
          $ref: '#/components/schemas/TextProtectedMaterialAnalysisResult'
      description: The combined detection results of potential protected material.
    DocumentInjectionAnalysisResult:
      required:
        - attackDetected
      type: object
      properties:
        attackDetected:
          type: boolean
          description: Whether a potential injection attack is detected or not.
      description: The individual analysis result of potential injection attacks in the given documents.
    ImageCategoriesAnalysis:
      required:
        - category
      type: object
      properties:
        category:
          $ref: '#/components/schemas/ImageCategory'
        severity:
          type: integer
          description: 'The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’, and the output value can be 0, 2, 4, 6.'
          format: int32
      description: Image analysis result.
    ImageCategory:
      enum:
        - Hate
        - SelfHarm
        - Sexual
        - Violence
      type: string
      description: The harm category supported in Image content analysis.
      x-ms-enum:
        name: ImageCategory
        modelAsString: true
        values:
          - name: Hate
            value: Hate
            description: The harm category for Image - Hate.
          - name: SelfHarm
            value: SelfHarm
            description: The harm category for Image - SelfHarm.
          - name: Sexual
            value: Sexual
            description: The harm category for Image - Sexual.
          - name: Violence
            value: Violence
            description: The harm category for Image - Violence.
    ImageData:
      type: object
      properties:
        content:
          type: string
          description: The Base64 encoding of the image.
          format: byte
        blobUrl:
          type: string
          description: The blob url of the image.
          format: uri
      description: 'The image can be either base64 encoded bytes or a blob URL. You can choose only one of these options. If both are provided, the request will be refused. The maximum image size is 2048 x 2048 pixels and should not exceed 4 MB, while the minimum image size is 50 x 50 pixels.'
    ImageDataResult:
      type: object
      properties:
        content:
          type: string
          description: Base64-encoded image.
          format: byte
      description: Definition of an image in a response.
    ImageIncident:
      required:
        - incidentName
        - created
        - lastUpdated
      type: object
      properties:
        incidentName:
          maxLength: 64
          pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
          type: string
          description: The name of the incident.
          x-ms-mutability:
            - read
            - create
        created:
          type: string
          description: The created time of this incident.
          format: date-time
          x-ms-mutability:
            - read
        lastUpdated:
          type: string
          description: The latest updated time of this incident.
          format: date-time
          x-ms-mutability:
            - read
      description: Definition of a content safety Image Incident.
    ImageIncidentCreateOrUpdate:
      type: object
      properties:
        incidentName:
          maxLength: 64
          pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
          type: string
          description: The name of the incident.
          x-ms-mutability:
            - read
            - create
      description: Definition of a content safety Image Incident.
    ImageIncidentOperationResult:
      required:
        - id
        - status
      type: object
      properties:
        id:
          type: string
          description: The id of this operation.
          x-ms-mutability:
            - read
            - create
        status:
          $ref: '#/components/schemas/IncidentOperationStatus'
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
      description: The details of a long running operation of Image Incident.
    ImageIncidentSample:
      required:
        - incidentSampleId
      type: object
      properties:
        incidentSampleId:
          maxLength: 64
          type: string
          description: The name of this incident sample.
          readOnly: true
        image:
          $ref: '#/components/schemas/ImageData'
      description: Definition of an Image Incident sample in a request.
    ImageIncidentSampleResult:
      required:
        - incidentSampleId
      type: object
      properties:
        incidentSampleId:
          type: string
          description: The name of this incident sample.
          readOnly: true
        image:
          $ref: '#/components/schemas/ImageDataResult'
      description: Definition of an Image Incident sample in a response.
    ImageWithTextCategoriesAnalysis:
      required:
        - category
      type: object
      properties:
        category:
          $ref: '#/components/schemas/ImageWithTextCategory'
        severity:
          type: integer
          description: It indicates the severity of the harm. 0 means the content is considered as safe in this harm category.
          format: int32
      description: The definition of individual result for analyzing an image with embedded or custom text.
    ImageWithTextCategory:
      enum:
        - Hate
        - SelfHarm
        - Sexual
        - Violence
      type: string
      description: The harm category supported in Image-with-Text content analysis.
      x-ms-enum:
        name: ImageWithTextCategory
        modelAsString: true
        values:
          - name: Hate
            value: Hate
            description: The harm category for Image-with-Text - Hate.
          - name: SelfHarm
            value: SelfHarm
            description: The harm category for Image-with-Text - SelfHarm.
          - name: Sexual
            value: Sexual
            description: The harm category for Image-with-Text - Sexual.
          - name: Violence
            value: Violence
            description: The harm category for Image-with-Text - Violence.
    IncidentLongRunningOperationStatusResult:
      type: object
      description: Incident long running operation status result.
    IncidentMatch:
      required:
        - incidentName
      type: object
      properties:
        incidentName:
          type: string
          description: The name of the matched incident.
      description: The definition of a matched content safety incident.
    IncidentOperationStatus:
      enum:
        - NotStarted
        - Running
        - Succeeded
        - Failed
        - Canceled
      type: string
      description: The possible status of a content safety incident operation.
      x-ms-enum:
        name: IncidentOperationStatus
        modelAsString: true
        values:
          - name: NotStarted
            value: NotStarted
            description: Content Safety Incident operation status - NotStarted
          - name: Running
            value: Running
            description: Content Safety Incident operation status - Running
          - name: Succeeded
            value: Succeeded
            description: Content Safety Incident operation status - Succeeded
          - name: Failed
            value: Failed
            description: Content Safety Incident operation status - Failed
          - name: Canceled
            value: Canceled
            description: Content Safety Incident operation status - Canceled
    IndexDetails:
      required:
        - utf8
        - utf16
        - codePoint
      type: object
      properties:
        utf8:
          type: integer
          description: Indicate the index when encoding is UTF-8.
          format: int64
        utf16:
          type: integer
          description: Indicate the index when encoding is UTF-16.
          format: int64
        codePoint:
          type: integer
          description: Indicate the index with code point format.
          format: int64
      description: To describe the string index in different representations.
    LLMResource:
      required:
        - azureOpenAIEndpoint
        - azureOpenAIDeploymentName
      type: object
      properties:
        resourceType:
          enum:
            - AzureOpenAI
          type: string
          description: LLM resource type.
          default: AzureOpenAI
          x-ms-enum:
            name: LLMResourceType
            modelAsString: true
            values:
              - name: AzureOpenAI
                value: AzureOpenAI
                description: The LLM resource type for Groundedness analysis - Azure OpenAI.
        azureOpenAIEndpoint:
          type: string
          description: Endpoint for Azure OpenAI resource.
        azureOpenAIDeploymentName:
          type: string
          description: Deployment name.
      description: Details of the given LLM resource.
    ListImageIncidentSampleResult:
      required:
        - incidentSampleId
      type: object
      properties:
        incidentSampleId:
          type: string
          description: The name of this incident sample.
          readOnly: true
      description: A single sample in an Image Incident sample list.
    PagedImageIncident:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ImageIncident'
          description: The ImageIncident items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of ImageIncident items
    PagedListImageIncidentSampleResult:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ListImageIncidentSampleResult'
          description: The ListImageIncidentSampleResult items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of ListImageIncidentSampleResult items
    PagedTextBlocklist:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklist'
          description: The TextBlocklist items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextBlocklist items
    PagedTextBlocklistItem:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextBlocklistItem'
          description: The TextBlocklistItem items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextBlocklistItem items
    PagedTextCustomCategoryVersion:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextCustomCategoryVersion'
          description: The TextCustomCategoryVersion items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextCustomCategoryVersion items
    PagedTextIncident:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextIncident'
          description: The TextIncident items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextIncident items
    PagedTextIncidentSample:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextIncidentSample'
          description: The TextIncidentSample items on this page
          x-ms-identifiers: [ ]
        nextLink:
          type: string
          description: The link to the next page of items
          format: uri
      description: Paged collection of TextIncidentSample items
    QnAOptions:
      required:
        - query
      type: object
      properties:
        query:
          type: string
          description: The user's question input in a QnA task.
      description: The options for QnA task.
    RemoveImageIncidentSamplesOptions:
      required:
        - incidentSampleIds
      type: object
      properties:
        incidentSampleIds:
          type: array
          items:
            type: string
          description: Incident samples to be removed.
      description: The request to remove incident samples from an Image Incident.
    RemoveTextBlocklistItemsOptions:
      required:
        - blocklistItemIds
      type: object
      properties:
        blocklistItemIds:
          type: array
          items:
            type: string
          description: Array of blocklistItemIds to remove.
      description: The request to remove blocklistItems from a text blocklist.
    RemoveTextIncidentSamplesOptions:
      required:
        - incidentSampleIds
      type: object
      properties:
        incidentSampleIds:
          type: array
          items:
            type: string
          description: Incident samples to be removed.
      description: The request to remove incident samples from a Text Incident.
    ShieldPromptOptions:
      type: object
      properties:
        userPrompt:
          type: string
          description: 'The user prompt to be analyzed, which may contain direct injection attacks.'
        documents:
          type: array
          items:
            type: string
          description: 'The documents to be analyzed, which may contain direct or indirect injection attacks.'
      description: The request of analyzing potential direct or indirect injection attacks.
    ShieldPromptResult:
      type: object
      properties:
        userPromptAnalysis:
          $ref: '#/components/schemas/UserPromptInjectionAnalysisResult'
        documentsAnalysis:
          type: array
          items:
            $ref: '#/components/schemas/DocumentInjectionAnalysisResult'
          description: Direct and indirect injection attacks analysis result for the given documents.
          x-ms-identifiers: [ ]
      description: The combined analysis results of potential direct or indirect injection attacks.
    TextBlocklist:
      required:
        - blocklistName
      type: object
      properties:
        blocklistName:
          maxLength: 64
          pattern: '^[0-9A-Za-z._~-]+$'
          type: string
          description: Text blocklist name.
          x-ms-mutability:
            - read
            - create
        description:
          maxLength: 1024
          type: string
          description: Text blocklist description.
      description: Text Blocklist.
    TextBlocklistCreateOrUpdate:
      type: object
      properties:
        blocklistName:
          maxLength: 64
          pattern: '^[0-9A-Za-z._~-]+$'
          type: string
          description: Text blocklist name.
          x-ms-mutability:
            - read
            - create
        description:
          maxLength: 1024
          type: string
          description: Text blocklist description.
      description: Text Blocklist.
    TextBlocklistItem:
      required:
        - blocklistItemId
        - text
      type: object
      properties:
        blocklistItemId:
          maxLength: 64
          type: string
          description: 'The service will generate a BlocklistItemId, which will be a UUID.'
          readOnly: true
        description:
          maxLength: 1024
          type: string
          description: BlocklistItem description.
        text:
          maxLength: 128
          type: string
          description: BlocklistItem content. The length is counted using Unicode code point.
        isRegex:
          type: boolean
          description: An optional properties indicating whether this item is to be matched as a regular expression.
      description: Item in a TextBlocklist.
    TextBlocklistMatch:
      required:
        - blocklistName
        - blocklistItemId
        - blocklistItemText
      type: object
      properties:
        blocklistName:
          maxLength: 64
          type: string
          description: The name of the matched blocklist.
        blocklistItemId:
          maxLength: 64
          type: string
          description: The ID of the matched item.
        blocklistItemText:
          maxLength: 128
          type: string
          description: The content of the matched item.
      description: The result of blocklist match.
    TextCategoriesAnalysis:
      required:
        - category
      type: object
      properties:
        category:
          $ref: '#/components/schemas/TextCategory'
        severity:
          type: integer
          description: 'The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7.'
          format: int32
      description: Text analysis result.
    TextCategory:
      enum:
        - Hate
        - SelfHarm
        - Sexual
        - Violence
      type: string
      description: The harm category supported in Text content analysis.
      x-ms-enum:
        name: TextCategory
        modelAsString: true
        values:
          - name: Hate
            value: Hate
            description: The harm category for Text - Hate.
          - name: SelfHarm
            value: SelfHarm
            description: The harm category for Text - SelfHarm.
          - name: Sexual
            value: Sexual
            description: The harm category for Text - Sexual.
          - name: Violence
            value: Violence
            description: The harm category for Text - Violence.
    TextCustomCategoryAnalysis:
      required:
        - detected
      type: object
      properties:
        detected:
          type: boolean
          description: Whether the Custom Category is detected.
      description: The analysis result of Custom Category.
    TextCustomCategoryVersion:
      required:
        - categoryName
        - definition
        - sampleBlobUrl
        - sampleBlobSnapshotUrl
        - version
        - createdTime
        - status
      type: object
      properties:
        categoryName:
          maxLength: 64
          pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
          type: string
          description: The name of this Custom Category
          x-ms-mutability:
            - read
            - update
            - create
        definition:
          type: string
          description: The definition or description of this Custom Category version.
          x-ms-mutability:
            - read
            - update
            - create
        sampleBlobUrl:
          type: string
          description: The blob URL which should be a jsonl that contains the samples. Read & write access to the upper layer virtual directory is required.
          x-ms-mutability:
            - read
            - update
            - create
        sampleBlobSnapshotUrl:
          type: string
          description: The blob URL that contains a snapshot of sampleBlobUrl.
          readOnly: true
        version:
          type: integer
          description: The version of Custom Category.
          format: int32
          readOnly: true
        createdTime:
          type: string
          description: The creation time of this Custom Category version. The time is in UTC.
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/CustomCategoryStatus'
        errorMessage:
          type: string
          description: The error details of this Custom Category version.
          readOnly: true
      description: Definition of a Customer Category version.
    TextCustomCategoryVersionList:
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TextCustomCategoryVersion'
          description: List of custom category versions.
          x-ms-identifiers: [ ]
      description: All versions of a Custom Category.
    TextIncident:
      required:
        - incidentName
        - created
        - lastUpdated
      type: object
      properties:
        incidentName:
          maxLength: 64
          pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
          type: string
          description: The name of the incident.
          x-ms-mutability:
            - read
            - create
        incidentDefinition:
          type: string
          description: The guideline to define this incident.
        created:
          type: string
          description: The created time of this incident.
          format: date-time
          x-ms-mutability:
            - read
        lastUpdated:
          type: string
          description: The latest updated time of this incident.
          format: date-time
          x-ms-mutability:
            - read
      description: Definition of a content safety Text Incident.
    TextIncidentCreateOrUpdate:
      type: object
      properties:
        incidentName:
          maxLength: 64
          pattern: '^(?=[a-zA-Z0-9])[a-zA-Z0-9-]*[a-zA-Z0-9]$'
          type: string
          description: The name of the incident.
          x-ms-mutability:
            - read
            - create
        incidentDefinition:
          type: string
          description: The guideline to define this incident.
      description: Definition of a content safety Text Incident.
    TextIncidentOperationResult:
      required:
        - id
        - status
      type: object
      properties:
        id:
          type: string
          description: The id of this operation.
          x-ms-mutability:
            - read
            - create
        status:
          $ref: '#/components/schemas/IncidentOperationStatus'
        errorMessage:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
      description: The details of a long running operation of Text Incident.
    TextIncidentSample:
      required:
        - incidentSampleId
      type: object
      properties:
        incidentSampleId:
          maxLength: 64
          type: string
          description: The name of this incident sample.
          readOnly: true
        text:
          type: string
          description: The text content of this incident sample.
      description: Definition of a sample in a Text Incident.
    TextProtectedMaterialAnalysisResult:
      required:
        - detected
      type: object
      properties:
        detected:
          type: boolean
          description: Whether potential protected material is detected or not.
      description: The individual detection result of potential protected material.
    UngroundednessDetails:
      required:
        - text
        - offset
        - length
      type: object
      properties:
        text:
          type: string
          description: The original text which is considered as ungrounded.
        offset:
          $ref: '#/components/schemas/IndexDetails'
        length:
          $ref: '#/components/schemas/IndexDetails'
        reason:
          type: string
          description: "The explanation for detected ungroundedness.\nIt's available only when the 'reasoning' field in the input is set to true."
      description: Details of the content that identified as ungroundedness.
    UserPromptInjectionAnalysisResult:
      required:
        - attackDetected
      type: object
      properties:
        attackDetected:
          type: boolean
          description: Whether a potential injection attack is detected or not.
      description: The individual analysis result of potential injection attacks in the given user prompt.
    ImageIncidentsIncidentName-deployPost202ApplicationJsonResponse:
      required:
        - id
        - status
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the operation.
        status:
          $ref: '#/components/schemas/Azure.Core.Foundations.OperationState'
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
        result:
          $ref: '#/components/schemas/IncidentLongRunningOperationStatusResult'
      description: Provides status details for long running operations.
    TextCategoriesCategoryName-buildPost202ApplicationJsonResponse:
      required:
        - id
        - status
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the operation.
        status:
          $ref: '#/components/schemas/Azure.Core.Foundations.OperationState'
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
        result:
          $ref: '#/components/schemas/CustomCategoryLongRunningOperationStatusResult'
      description: Provides status details for long running operations.
    TextIncidentsIncidentName-deployPost202ApplicationJsonResponse:
      required:
        - id
        - status
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the operation.
        status:
          $ref: '#/components/schemas/Azure.Core.Foundations.OperationState'
        error:
          $ref: '#/components/schemas/Azure.Core.Foundations.Error'
        result:
          $ref: '#/components/schemas/IncidentLongRunningOperationStatusResult'
      description: Provides status details for long running operations.
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]